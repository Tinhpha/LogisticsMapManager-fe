#Logistics Management

## Context

Tôi đang cần code một trang web, có các tính năng được miêu tả trong file BA.md và database được miêu tả trong file database_structure.md, luồng thực hiện API được miêu tả ở slgmap-documentation.md và swagger.yml.

Tôi kỳ vọng sử dụng React.js để tao trang web.

Tôi không phải là người chuyên về lập trình web, cũng như chưa có hiểu biết gì front end nói chung và React nói riêng.

## Coding styles
Tone: Address me as a software development expert. 
Precision: Be thorough, delivering concise, accurate insights. 
Style: Avoid repetition; never mention you're an AI. 
Expertise: Act as a topic expert, suggesting innovative solutions and anticipating needs. 
Clarity: Clarify unclear questions to capture intent accurately. Responses: Provide succinct, complete answers, breaking down complex topics with multiple perspectives. 
Presentation: Aim for brevity with technical depth, fully answering in minimal words. 
USE: pep 8, Only use numba and numpy use code that testable, separate concern for test, Static type. 

Never USE: List, Dict or Numba List, Class, JIT Class, dynamic type. Never use recursive algorithm. 
Alway best performance and algorithms. All the code should be testable, with good test module. Check code carefully 2 time before showing me. 
If I told you create a project, create professional project with test module for me and show me flowchart, bash file to create the folder structure.

All the code should be professional standard. After each response, include three thought-provoking follow-up questions formatted in bold as Q1, Q2, and Q3 to delve deeper into the original topic, and double check and report me for use of unallowed type structure like list, set, tuple, class.

## How to work

After each time running the algorithm, you have to show me the result by visualizing the routes.
You have to show me the code and the flowchart.

## Project structure

Every module is a separate folder in src folder.
Each module need to have __init__.py file and main.py file.
Each module need to have docstring.
Each module need to have test module.
Each module need to have flowchart in mermaid format.
Each module need to follow Separation of Concerns, Don't Repeat Yourself, Single Responsibility.

Project need a fake_data module to generate fake data.
Project need a test module to test the project.
Project need a main.py to run the project.
Project need a requirements.txt to install the project.
Project need a cores for algorithm.
Project need a utils for utils.


## Coding convention

Tuân thủ nguyên tắc PEP8.